type Board @model @auth(rules: [{allow: public}]) {
  id: ID!
  Room: Room @hasOne
  number: Int
  a1: Boolean
  a2: Boolean
  a3: Boolean
  a4: Boolean
  a5: Boolean
  b1: Boolean
  b2: Boolean
  b3: Boolean
  b4: Boolean
  b5: Boolean
  c1: Boolean
  c2: Boolean
  c3: Boolean
  c4: Boolean
  c5: Boolean
  d1: Boolean
  d2: Boolean
  d3: Boolean
  d4: Boolean
  d5: Boolean
  e1: Boolean
  e2: Boolean
  e3: Boolean
  e4: Boolean
  e5: Boolean
  columnA: String
  columnB: String
  columnC: String
  columnD: String
  columnE: String
}

type RoomMeta @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  value: String
  Room: Room @hasOne
  creation_datetime: AWSDateTime
}

type QuestionEvent @model @auth(rules: [{allow: public}]) {
  id: ID!
  Question: Question @hasOne
  type: String
  datetime: AWSDateTime
}

type Question @model @auth(rules: [{allow: public}]) {
  id: ID!
  text: String
  enabled: Boolean
  points: Int
  category: String
  board_relation: String
  Board: Board @hasOne
}

type Room @model @auth(rules: [{allow: public}]) {
  id: ID!
  code: String
  creation_datetime: AWSDateTime
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  admin: Boolean
  creation_datetime: AWSDateTime
  Room: Room @hasOne
  points: Int
  mesos: Int
  security_name: String
}
 